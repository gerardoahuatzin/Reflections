What happens when you initialize a repository? Why do you need to do it?
When you initiate a new repository, git creates all the control files to keep track of the changes, you need them to keep track of your system development
How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area helps prevent the changes to affect the final solution before it's tested, also it is a confirmation space, we want to be extremely sure we want to commit changes.
How can you use the staging area to make sure you have one commit per logical change?
We can check with git diff and git diff --staged if there is to be just one logical change per commit, also checking with git status we can be sure just one commit is going to be done.
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches help develop options to your program without damaging the actual running version, this way you can experiment with new features before setting them on the working program.
How do the diagrams help you visualize the branch structure?
It is helpful to keep track of branches and not lose any changes or modifications.
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
the reason to merge two branches together is to set get into the final program the tests or add ons made in the branches, we represent them the way they are to be able to differenciate when the branches were merged and see when the changes were made.